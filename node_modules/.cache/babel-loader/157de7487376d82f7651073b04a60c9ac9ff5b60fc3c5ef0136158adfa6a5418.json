{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82106\\\\Downloads\\\\enneagram-app-full\\\\src\\\\TestContainer.js\",\n  _s = $RefreshSig$();\n// TestContainer.js\nimport React, { useState } from \"react\";\nimport questionData from \"./questionData\";\nimport QuestionItem from \"./QuestionItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffle = array => {\n  const result = [...array];\n  for (let i = result.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [result[i], result[j]] = [result[j], result[i]];\n  }\n  return result;\n};\nfunction TestContainer() {\n  _s();\n  const fixedQuestion = questionData[0];\n  const restQuestions = questionData.slice(1);\n  const shuffled = shuffle(restQuestions);\n  const mixedQuestions = [fixedQuestion, ...shuffled];\n  const [page, setPage] = useState(0);\n  const questionsPerPage = 3;\n  const totalPages = Math.ceil(mixedQuestions.length / questionsPerPage);\n  const currentQuestions = mixedQuestions.slice(page * questionsPerPage, page * questionsPerPage + questionsPerPage);\n  const [answers, setAnswers] = useState({});\n  const handleAnswer = (questionId, value) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: value\n    }));\n  };\n  const allAnswered = currentQuestions.every(q => answers[q.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAE30\\uBCF8\\uBB38\\uD56D \\uAC80\\uC0AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), currentQuestions.map((q, idx) => /*#__PURE__*/_jsxDEV(QuestionItem, {\n      question: q.text,\n      index: q.id,\n      value: answers[q.id],\n      onChange: val => handleAnswer(q.id, val)\n    }, q.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(prev => Math.max(prev - 1, 0)),\n        disabled: page === 0,\n        children: \"\\uC774\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          margin: \"0 1rem\"\n        },\n        children: [page + 1, \" / \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(prev => Math.min(prev + 1, totalPages - 1)),\n        disabled: !allAnswered,\n        children: \"\\uB2E4\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(TestContainer, \"bCC5ndnTS4OhagC8Wr0KPJueCaY=\");\n_c = TestContainer;\nexport default TestContainer;\nvar _c;\n$RefreshReg$(_c, \"TestContainer\");","map":{"version":3,"names":["React","useState","questionData","QuestionItem","jsxDEV","_jsxDEV","shuffle","array","result","i","length","j","Math","floor","random","TestContainer","_s","fixedQuestion","restQuestions","slice","shuffled","mixedQuestions","page","setPage","questionsPerPage","totalPages","ceil","currentQuestions","answers","setAnswers","handleAnswer","questionId","value","prev","allAnswered","every","q","id","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","question","text","index","onChange","val","marginTop","onClick","max","disabled","margin","min","_c","$RefreshReg$"],"sources":["C:/Users/82106/Downloads/enneagram-app-full/src/TestContainer.js"],"sourcesContent":["// TestContainer.js\r\nimport React, { useState } from \"react\";\r\nimport questionData from \"./questionData\";\r\nimport QuestionItem from \"./QuestionItem\";\r\n\r\nconst shuffle = (array) => {\r\n  const result = [...array];\r\n  for (let i = result.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [result[i], result[j]] = [result[j], result[i]];\r\n  }\r\n  return result;\r\n};\r\n\r\nfunction TestContainer() {\r\n  const fixedQuestion = questionData[0];\r\n  const restQuestions = questionData.slice(1);\r\n  const shuffled = shuffle(restQuestions);\r\n  const mixedQuestions = [fixedQuestion, ...shuffled];\r\n\r\n  const [page, setPage] = useState(0);\r\n  const questionsPerPage = 3;\r\n  const totalPages = Math.ceil(mixedQuestions.length / questionsPerPage);\r\n\r\n  const currentQuestions = mixedQuestions.slice(\r\n    page * questionsPerPage,\r\n    page * questionsPerPage + questionsPerPage\r\n  );\r\n\r\n  const [answers, setAnswers] = useState({});\r\n\r\n  const handleAnswer = (questionId, value) => {\r\n    setAnswers((prev) => ({\r\n      ...prev,\r\n      [questionId]: value,\r\n    }));\r\n  };\r\n\r\n  const allAnswered = currentQuestions.every((q) => answers[q.id]);\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\" }}>\r\n      <h2>기본문항 검사</h2>\r\n\r\n      {currentQuestions.map((q, idx) => (\r\n        <QuestionItem\r\n          key={q.id}\r\n          question={q.text}\r\n          index={q.id}\r\n          value={answers[q.id]}\r\n          onChange={(val) => handleAnswer(q.id, val)}\r\n        />\r\n      ))}\r\n\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <button\r\n          onClick={() => setPage((prev) => Math.max(prev - 1, 0))}\r\n          disabled={page === 0}\r\n        >\r\n          이전\r\n        </button>\r\n        <span style={{ margin: \"0 1rem\" }}>\r\n          {page + 1} / {totalPages}\r\n        </span>\r\n        <button\r\n          onClick={() => setPage((prev) => Math.min(prev + 1, totalPages - 1))}\r\n          disabled={!allAnswered}\r\n        >\r\n          다음\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}