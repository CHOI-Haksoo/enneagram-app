{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82106\\\\Downloads\\\\enneagram-app-full\\\\src\\\\TestContainer.js\",\n  _s = $RefreshSig$();\n// TestContainer.js\n// TestContainer.js\nimport React, { useState } from \"react\";\nimport questionData from \"./questionData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffle = array => {\n  const result = [...array];\n  for (let i = result.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [result[i], result[j]] = [result[j], result[i]];\n  }\n  return result;\n};\nfunction TestContainer() {\n  _s();\n  // 1번 문항 고정\n  const fixedQuestion = questionData[0];\n  // 나머지 44개 문항\n  const restQuestions = questionData.slice(1);\n  // 랜덤으로 섞기\n  const shuffled = shuffle(restQuestions);\n  // 합치기\n  const mixedQuestions = [fixedQuestion, ...shuffled];\n\n  // 페이지당 3문항씩\n  const [page, setPage] = useState(0);\n  const questionsPerPage = 3;\n  const totalPages = Math.ceil(mixedQuestions.length / questionsPerPage);\n  const currentQuestions = mixedQuestions.slice(page * questionsPerPage, page * questionsPerPage + questionsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAE30\\uBCF8\\uBB38\\uD56D\\uAC80\\uC0AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), currentQuestions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"1rem 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [page * questionsPerPage + idx + 1, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), \" \", q.text]\n    }, page * questionsPerPage + idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(prev => Math.max(prev - 1, 0)),\n        disabled: page === 0,\n        children: \"\\uC774\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          margin: \"0 1rem\"\n        },\n        children: [page + 1, \" / \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(prev => Math.min(prev + 1, totalPages - 1)),\n        disabled: page === totalPages - 1,\n        children: \"\\uB2E4\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(TestContainer, \"54dVtaqv/8WouJ+rx2t67oLHEmc=\");\n_c = TestContainer;\nexport default TestContainer;\nvar _c;\n$RefreshReg$(_c, \"TestContainer\");","map":{"version":3,"names":["React","useState","questionData","jsxDEV","_jsxDEV","shuffle","array","result","i","length","j","Math","floor","random","TestContainer","_s","fixedQuestion","restQuestions","slice","shuffled","mixedQuestions","page","setPage","questionsPerPage","totalPages","ceil","currentQuestions","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","q","idx","margin","text","marginTop","onClick","prev","max","disabled","min","_c","$RefreshReg$"],"sources":["C:/Users/82106/Downloads/enneagram-app-full/src/TestContainer.js"],"sourcesContent":["// TestContainer.js\r\n// TestContainer.js\r\nimport React, { useState } from \"react\";\r\nimport questionData from \"./questionData\";\r\n\r\nconst shuffle = (array) => {\r\n  const result = [...array];\r\n  for (let i = result.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [result[i], result[j]] = [result[j], result[i]];\r\n  }\r\n  return result;\r\n};\r\n\r\nfunction TestContainer() {\r\n  // 1번 문항 고정\r\n  const fixedQuestion = questionData[0];\r\n  // 나머지 44개 문항\r\n  const restQuestions = questionData.slice(1);\r\n  // 랜덤으로 섞기\r\n  const shuffled = shuffle(restQuestions);\r\n  // 합치기\r\n  const mixedQuestions = [fixedQuestion, ...shuffled];\r\n\r\n  // 페이지당 3문항씩\r\n  const [page, setPage] = useState(0);\r\n  const questionsPerPage = 3;\r\n  const totalPages = Math.ceil(mixedQuestions.length / questionsPerPage);\r\n\r\n  const currentQuestions = mixedQuestions.slice(\r\n    page * questionsPerPage,\r\n    page * questionsPerPage + questionsPerPage\r\n  );\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\" }}>\r\n      <h2>기본문항검사</h2>\r\n      {currentQuestions.map((q, idx) => (\r\n        <div key={page * questionsPerPage + idx} style={{ margin: \"1rem 0\" }}>\r\n          <strong>{page * questionsPerPage + idx + 1}.</strong> {q.text}\r\n        </div>\r\n      ))}\r\n\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <button\r\n          onClick={() => setPage((prev) => Math.max(prev - 1, 0))}\r\n          disabled={page === 0}\r\n        >\r\n          이전\r\n        </button>\r\n        <span style={{ margin: \"0 1rem\" }}>\r\n          {page + 1} / {totalPages}\r\n        </span>\r\n        <button\r\n          onClick={() => setPage((prev) => Math.min(prev + 1, totalPages - 1))}\r\n          disabled={page === totalPages - 1}\r\n        >\r\n          다음\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}